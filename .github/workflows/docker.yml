name: Docker CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

env:
  docker_tag: ${{ github.event_name != 'release' && 'test' || 'latest' }}

jobs:
  arm64:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.repository == 'Kaiede/docker-minecraft-bedrock-backup'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +%s)"

    - name: Render Dockerfiles
      run: bash Docker/render.sh all

    - name: Build arm64
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./arm64.dockerfile
        platforms: linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: kaiede/minecraft-bedrock-backup:${{ env.docker_tag }}-arm64
        build-args: |
          CACHEBUST=${{ steps.date.outputs.date }}
          COMMIT=main
          ARCH=arm64

  amd64:
    runs-on: ubuntu-latest
    if: github.repository == 'Kaiede/docker-minecraft-bedrock-backup'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +%s)"

    - name: Render Dockerfiles
      run: bash Docker/render.sh all

    - name: Build amd64
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./amd64.dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: kaiede/minecraft-bedrock-backup:${{ env.docker_tag }}-amd64
        build-args: |
          CACHEBUST=${{ steps.date.outputs.date }}
          COMMIT=main
          ARCH=amd64

  merge-tags:
    needs: ['arm64', 'amd64']
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.repository == 'Kaiede/docker-minecraft-bedrock-backup'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Merge Manifests
      if: github.event_name != 'pull_request'
      run: bash Docker/merge.sh kaiede/minecraft-bedrock-backup:${{ env.docker_tag }}
